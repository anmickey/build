{"version":3,"file":"static/js/687.770e34b2.chunk.js","mappings":"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","sources":["Pages/Basket/components/ProductBasket/ProductBasket.tsx","Pages/Basket/components/BasketBodyOne/BasketBodyOne.tsx","Pages/Basket/components/SaleBlock/SaleBlock.tsx","Pages/Basket/components/TotalPrice/TotalPrice.tsx","Pages/Basket/Basket.tsx","components/UI/Input/OtherInput.tsx"],"sourcesContent":["import React from 'react';\r\nimport { ReactComponent as X } from '../../../../img/icons/x.svg';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BtnBasket, HeartBtn, btnHOC } from '../../../../components';\r\nimport { links } from '../../../../Router';\r\nimport { useAppDispatch, useAppSelector } from '../../../../store';\r\nimport { removeBasketHTTP } from '../../../../store/goodsSlices/basketSlice';\r\n\r\nimport './style/ProductBasket.scss';\r\nimport { ProductBasketT } from '../../../../store/goodsSlices/goods.config';\r\n\r\nexport const ProductBasket = ({ product }: TypeGoods) => {\r\n  const dispatch = useAppDispatch();\r\n  const { sale } = useAppSelector((state) => state.basket);\r\n  const router = useNavigate();\r\n  const Btn = btnHOC<ProductBasketT>(BtnBasket);\r\n\r\n  const clean = async () => {\r\n    await dispatch(removeBasketHTTP({ id: product.id }));\r\n  };\r\n\r\n  const route = () => {\r\n    router(`/basket/${product.id}`);\r\n    document.documentElement.scrollIntoView(true);\r\n  };\r\n\r\n  return (\r\n    <div className='productbasket__item'>\r\n      <div className='productbasket__first'>\r\n        <div className='productbasket__blockimg' onClick={route}>\r\n          <div\r\n            className='productbasket__img '\r\n            style={{\r\n              backgroundImage: `url(${links.API_URL}${\r\n                Array.from(\r\n                  Object.values(JSON.parse(product.deviceimg.img || '{}'))\r\n                )[0]\r\n              })`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='productbasket__second'>\r\n        <div className='productbasket__text'>\r\n          <div className='productbasket__name'>\r\n            <p className='basketblock'>\r\n              {product.name.length <= 15\r\n                ? product.name\r\n                : product.name\r\n                    .split('')\r\n                    .filter((_, index) => index <= 14)\r\n                    .filter(\r\n                      (item, index) =>\r\n                        index < 14 || (index >= 14 && item != ' ')\r\n                    )\r\n                    .join('')}\r\n              {product.name.length > 15 && (\r\n                <span title={product.name}>...</span>\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className='productbasket__category'>\r\n            <p className='mini basketblock'>\r\n              {product?.brand?.name.length <= 15\r\n                ? product?.brand?.name\r\n                : product?.brand?.name\r\n                    .split('')\r\n                    .filter((_, index) => index <= 14)\r\n                    .filter(\r\n                      (item, index) =>\r\n                        index < 14 || (index >= 14 && item != ' ')\r\n                    )\r\n                    .join('')}\r\n              {product.brand.length > 15 && (\r\n                <span title={product.brand.toString()}>...</span>\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className='productbasket__btnfirst'>\r\n          <Btn product={product} />\r\n        </div>\r\n      </div>\r\n      <div className='productbasket__btnsecond'>\r\n        <Btn product={product} />\r\n      </div>\r\n      <div className='productbasket__midst'>\r\n        <div className='productbasket__price'>\r\n          {sale != 0 && (\r\n            <p className='big sale'>{`$${\r\n              +product?.price * product.quantity -\r\n              ((+product?.price * product.quantity) / 100) *\r\n                (sale + +product?.sale)\r\n            }`}</p>\r\n          )}\r\n          {product.sale > 0 && sale <= 0 ? (\r\n            <>\r\n              <p className={'basketblock newcols big'}>{`$${(\r\n                +product?.price * product?.quantity -\r\n                ((+product?.price * product?.quantity) / 100) * product.sale\r\n              ).toFixed(0)}`}</p>\r\n              <p className={'basketblock through mini'}>{`$${\r\n                +product?.price * product?.quantity\r\n              }`}</p>\r\n            </>\r\n          ) : (\r\n            <p\r\n              className={sale != 0 ? 'mini old basketblock' : 'big basketblock'}\r\n            >{`$${+product?.price * product?.quantity}`}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='productbasket__end'>\r\n        <HeartBtn id={product.id} />\r\n        <div onClick={clean} className='productbasket__delete'>\r\n          <X />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface TypeGoods {\r\n  product: ProductBasketT;\r\n}\r\n","import { useAppSelector } from '../../../../store';\r\nimport { ProductBasketT } from '../../../../store/goodsSlices/goods.config';\r\nimport { ProductBasket } from '../ProductBasket/ProductBasket';\r\n\r\nexport const BasketBodyOne: React.FC = () => {\r\n  const { products } = useAppSelector((state) => state.basket);\r\n\r\n  return (\r\n    <div className='productbasket__goods'>\r\n      {products.map((item: ProductBasketT) => {\r\n        return <ProductBasket product={item} key={item.id} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { FieldValues, SubmitHandler, useForm } from 'react-hook-form';\r\nimport './style/SaleBlock.scss';\r\nimport { Button } from '../../../../components';\r\nimport OtherInpurt from '../../../../components/UI/Input/OtherInput';\r\nimport { useAppDispatch, useAppSelector } from '../../../../store';\r\nimport { setSale } from '../../../../store/goodsSlices/basketSlice';\r\n\r\nconst SaleBlock: React.FC = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    setValue,\r\n  } = useForm<FieldValues>({ mode: 'onChange' });\r\n  const dispatch = useAppDispatch();\r\n  const { sale } = useAppSelector((state) => state.basket);\r\n  const submit: SubmitHandler<FieldValues> = () => {\r\n    if (sale > 0) {\r\n      dispatch(setSale({ sale: 0 }));\r\n      setValue('code', '');\r\n    } else {\r\n      dispatch(setSale({ sale: 10 }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sale > 0) {\r\n      setValue('code', 'abcAD55');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className='setsale'>\r\n      <div className='setsale__input'>\r\n        <OtherInpurt\r\n          register={register}\r\n          type='text'\r\n          setValue={setValue}\r\n          errors={errors}\r\n          name='code'\r\n          textFiled='Promocode'\r\n        />\r\n      </div>\r\n      <div className='setsale__btn'>\r\n        <Button name='sale'>\r\n          <p className='mini'>{sale != 0 ? 'delete' : 'apply'}</p>\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SaleBlock;\r\n","import './style/TotalPrice.scss';\r\nimport { useAppSelector } from '../../../../store';\r\nimport { sumBasket, sumSaleBasket } from '../basketFunction';\r\n\r\nexport const TotalPrice: React.FC = () => {\r\n  const { sale, products } = useAppSelector((state) => state.basket);\r\n\r\n  return (\r\n    <div className='totalprice'>\r\n      {sale != 0 ? (\r\n        <>\r\n          <div className='totalprice__price totalprice__block'>\r\n            <div className='totalprice__text'>\r\n              <p className='mini'>Price without discount</p>\r\n            </div>\r\n            <div className='totalprice__number'>\r\n              <p className='basket'>{`${sumBasket(products)}$`}</p>\r\n            </div>\r\n          </div>\r\n          <div className='totalprice__sale totalprice__block'>\r\n            <div className='totalprice__text'>\r\n              <p className='mini'>Discount</p>\r\n            </div>\r\n            <div className='totalprice__number'>\r\n              <p className='mini'>10%</p>\r\n            </div>\r\n          </div>\r\n          <div className='totalprice__total totalprice__block'>\r\n            <div className='totalprice__text'>\r\n              <p className='mini'>Total </p>\r\n            </div>\r\n            <div className='totalprice__number'>\r\n              <p className=' sale'>{`${sumSaleBasket(products, sale)}$`}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className='totalprice__total notprice totalprice__block'>\r\n          <div className='totalprice__text'>\r\n            <p className='mini'>Price without discount </p>\r\n          </div>\r\n          <div className='totalprice__number'>\r\n            <p>{`${sumBasket(products)}$`}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { ReactComponent as Cart } from '../../img/icons/cart.svg';\r\nimport { BasketBodyOne } from './components/BasketBodyOne/BasketBodyOne';\r\nimport SaleBlock from './components/SaleBlock/SaleBlock';\r\nimport { TotalPrice } from './components/TotalPrice/TotalPrice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, MetaData } from '../../components';\r\nimport { useAppDispatch } from '../../store';\r\nimport { clearBasketHTTP } from '../../store/goodsSlices/basketSlice';\r\n\r\nimport './style/Basket.scss';\r\n\r\nconst Basket = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const router = useNavigate();\r\n\r\n  const clean = async () => {\r\n    await dispatch(clearBasketHTTP());\r\n    router('/shop');\r\n  };\r\n\r\n  return (\r\n    <MetaData title='Basket' disc='Fight Gym basket'>\r\n      <div className='basket  indent_last'>\r\n        <div className='container'>\r\n          <div className='basket__row'>\r\n            <div className='pageonebas__header'>\r\n              <div className='pageonebas__logo'>\r\n                <div className='pageonebas__img'>\r\n                  <Cart />\r\n                </div>\r\n                <div className='pageonebas__title'>\r\n                  <h3>Basket</h3>\r\n                </div>\r\n              </div>\r\n              <div className='pageonebas__clear'>\r\n                <p onClick={clean} className='mini'>\r\n                  Clear for basket\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className='pageonebas'>\r\n              <BasketBodyOne />\r\n\r\n              <div className='basket__aside scroll' data-sale>\r\n                <div className='basket__price'>\r\n                  <SaleBlock />\r\n\r\n                  <TotalPrice />\r\n                  <div className='pageonebas__btn'>\r\n                    <Button name='sign'>\r\n                      <p className='mini'>make an order</p>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </MetaData>\r\n  );\r\n};\r\n\r\nexport default Basket;\r\n","import React, { useEffect } from 'react';\r\nimport InputErrFoot from './components/InputErrFoot';\r\nimport { change, focus, renderInput } from './components/inputFocus';\r\nimport { valid } from './components/validate';\r\nimport { InputFiledsTypes } from '../../../interface/ui.interface';\r\nimport { InputFiledTypes } from './Input.config';\r\nimport { useAppSelector } from '../../../store';\r\n\r\nimport './style/Input.scss';\r\n\r\nexport default function OtherInpurt({\r\n  type,\r\n  register,\r\n  name,\r\n  errors,\r\n  setValue,\r\n  textFiled,\r\n}: InputFiledsTypes<any>) {\r\n  const err = errors[name] && (errors[name]?.message || 'Error');\r\n  const { sale } = useAppSelector((state) => state.basket);\r\n\r\n  const changeSale = (e) => {\r\n    if (sale > 0) setValue(name, 'aaa');\r\n    else change(e, setValue, name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderInput();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='inputFiled'>\r\n      <div\r\n        className={\r\n          sale > 0 ? 'inputFiled__block sale ' : 'inputFiled__block old all'\r\n        }\r\n      >\r\n        <div className='inputFiled__text old all'>\r\n          <p className='mini'>{textFiled}</p>\r\n        </div>\r\n        <input\r\n          {...register(name, {\r\n            required: 'Field must be filled',\r\n            pattern: valid(type, name),\r\n          })}\r\n          onChange={(e) => changeSale(e)}\r\n          onFocus={focus}\r\n          onBlur={focus}\r\n          type={type}\r\n        />\r\n      </div>\r\n      {err && <InputErrFoot err={err} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AllInpurt({\r\n  type,\r\n  register,\r\n  name,\r\n  setValue,\r\n  textFiled,\r\n}: InputFiledTypes<any>) {\r\n  useEffect(() => {\r\n    renderInput();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='inputFiled'>\r\n      <div className={'inputFiled__block old all'}>\r\n        <div className='inputFiled__text old all'>\r\n          <p className='mini'>{textFiled}</p>\r\n        </div>\r\n        <input\r\n          {...register(name, {\r\n            required: 'Field must be filled',\r\n            pattern: valid(type, name),\r\n          })}\r\n          onChange={(e) => change(e, setValue, name)}\r\n          onFocus={focus}\r\n          onBlur={focus}\r\n          type={type}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ProductBasket","product","dispatch","useAppDispatch","sale","useAppSelector","state","basket","router","useNavigate","Btn","btnHOC","BtnBasket","clean","removeBasketHTTP","id","className","onClick","document","documentElement","scrollIntoView","style","backgroundImage","links","Array","from","Object","values","JSON","parse","deviceimg","img","name","length","split","filter","_","index","item","join","title","brand","toString","price","quantity","toFixed","BasketBodyOne","products","map","useForm","mode","register","errors","formState","handleSubmit","setValue","useEffect","onSubmit","setSale","type","textFiled","TotalPrice","sumBasket","sumSaleBasket","clearBasketHTTP","disc","OtherInpurt","err","message","renderInput","required","pattern","valid","onChange","e","change","changeSale","onFocus","focus","onBlur","AllInpurt"],"sourceRoot":""}